{"version":3,"file":"main.js","sourceRoot":"","sources":["../src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,uCAAyC;AACzC,gCAAyC;AACzC,yBAAoC;AACpC,0DAA0D;AAE1D,0DAA0D;AAE1D,iDAAiD;AAEjD,iBAAiB;AACjB,0BAA0B;AAC1B,uBAAuB;AACvB,mCAAmC;AACnC,sBAAsB;AACtB,yBAAyB;AACzB,0BAA0B;AAC1B,IAAI;AAEJ,kCAAkC;AAClC,sCAAsC;AACtC,oCAAoC;AACpC,qBAAqB;AACrB,wCAAwC;AACxC,YAAY;AAEZ,SAAe,MAAM;;QACjB,IAAI,GAAG,GAAG,IAAI,CAAC;QACf,IAAI;YACA,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,YAAY,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAC,CAAC;YACtE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;SACpC;QAAC,OAAO,KAAK,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACpB;QAED,IAAI,SAAS,GAAG,IAAI,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAA;QAC7B,MAAM,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;YACpC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAEpB,0DAA0D;QAC1D,iCAAiC;QACjC,yBAAyB;QACzB,sBAAsB;QACtB,2BAA2B;QAC3B,wBAAwB;QACxB,mBAAmB;QACnB,oBAAoB;QACpB,oCAAoC;QACpC,IAAI;QACJ,4DAA4D;QAC5D,wBAAwB;QACxB,uBAAuB;QACvB,MAAM;QAEN,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzB,SAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAG,MAAM,EAAC,CAAC,CAAC;QAC5C,SAAS,CAAC,IAAI,CAAC,cAAc,EAAE,KAAK,EAAE,EAAE,IAAI,EAAG,MAAM,EAAC,EAAE,GAAG,EAAE;YACzD,OAAO,kBAAkB,CAAC;QAC9B,CAAC,CAAC,CAAC;QACH,SAAS,CAAC,IAAI,CAAC,cAAc,EAAE,KAAK,EAAE,EAAE,IAAI,EAAG,MAAM,EAAC,CAAC,CAAC;QACxD,MAAM,SAAS,CAAC,eAAe,CAAC,kBAAkB,CAAC,CAAC;QACpD,SAAS,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,IAAI,EAAG,MAAM,EAAC,EAAE,EAAE,IAAI,EAAG,MAAM,EAAC,CAAC,CAAA;QAClE,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QACjC,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC1B,UAAU,CAAC,GAAG,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;gBAClB,SAAS,CAAC,OAAO,CAAC,aAAa,EAAE,EAAC,IAAI,EAAG,MAAM,EAAC,CAAC,CAAC;gBAClD,OAAO,EAAE,CAAC;YACd,CAAC,EAAE,IAAI,CAAC,CAAC;QACb,CAAC,CAAC,CAAC;QAEH,2BAA2B;IAC/B,CAAC;CAAA;AAED,MAAM,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;IACnB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC","sourcesContent":["import C4Logger  = require('./C4Logger');\nimport Yaml         = require('js-yaml');\nimport FS           = require('fs');\n// import C4LoggerOptions  = require('./C4LoggerOptions');\n\n// import C4LoggerOptions  = require('./C4LoggerOptions');\n\n// let CurLogger = new C4Log2Files.C4Log2Files();\n\n// let Config = {\n//     maxsize     : 1024,\n//     maxFiles    : 3,\n//     filename : './test-log.log',\n//     level : 'info',\n//     name : 'test-log',\n//     label : 'test-log',\n// }\n\n// CurLogger.init(Config, 'info');\n// CurLogger.fatal('123', { a : 123});\n// CurLogger.profile('TestProfile');\n// setTimeout(() => {\n//     CurLogger.profile('TestProfile');\n// }, 30000)\n\nasync function Launch() {\n    let doc = null;\n    try {\n        doc = Yaml.safeLoad(FS.readFileSync('./Config/C4Logger.yml', 'utf8'));\n        console.log(JSON.stringify(doc));\n    } catch (error) {\n        console.log(error);\n        process.exit(-1);\n    }\n\n    let CurLogger = new C4Logger.C4Logger();\n    console.log('begin init....')\n    await CurLogger.init(doc).catch((err) => {\n        console.log(err);\n        process.exit(-1);\n    });\n    console.log('init');\n\n    // let TempConfig : C4LoggerOptions.RedisLoggerOptions = {\n    //     name : 'custom-logger-02',\n    //     logtype : 'redis',\n    //     level : 'info',\n    //     label : 'custom-02',\n    //     host : '0.0.0.0',\n    //     port : 6379,\n    //     length : 300,\n    //     container : 'test-custom-log'\n    // }\n    // await CurLogger.addTransport(TempConfig).catch((err) => {\n    //     console.log(err);\n    //     process.exit(-1)\n    // });\n\n    CurLogger.info('123456');\n    CurLogger.debug('test a', { type : 'test'});\n    CurLogger.info('test a -> %s', '123', { type : 'test'}, () => {\n        return 'custom-logger-00';\n    });\n    CurLogger.info('test a -> %s', '123', { type : 'test'});\n    await CurLogger.removeTransport('custom-logger-01');\n    CurLogger.info('test b -> %j', { type : 'test'}, { type : 'test'})\n    CurLogger.profile('testProfile');\n    await new Promise((resolve) => {\n        setTimeout(() => {\n            console.log('123')\n            CurLogger.profile('testProfile', {type : 'test'});\n            resolve();\n        }, 4000);\n    });\n\n    // await CurLogger.close();\n}\n\nLaunch().catch((err) => {\n    console.log(err);\n});\n"]}